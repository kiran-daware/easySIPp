<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE scenario SYSTEM "sipp.dtd">

<!-- This program is free software; you can redistribute it and/or      -->
<!-- modify it under the terms of the GNU General Public License as     -->
<!-- published by the Free Software Foundation; either version 2 of the -->
<!-- License, or (at your option) any later version.                    -->
<!--                                                                    -->
<!-- This program is distributed in the hope that it will be useful,    -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of     -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      -->
<!-- GNU General Public License for more details.                       -->
<!--                                                                    -->
<!-- You should have received a copy of the GNU General Public License  -->
<!-- along with this program; if not, write to the                      -->
<!-- Free Software Foundation, Inc.,                                    -->
<!-- 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA             -->
<!--                                                                    -->
<!--                 Sipp default 'uas' scenario.                       -->
<!--                                                                    -->

<scenario name="Basic UAS responder">
  <!-- By adding rrs="true" (Record Route Sets), the route sets         -->
  <!-- are saved and used for following messages sent. Useful to test   -->
  <!-- against stateful SIP proxies/B2BUAs.                             -->
  <recv request="INVITE" crlf="true" rrs="true">
  <action>
      <ereg regexp=".*" search_in="hdr" header="Via:" check_it="true" assign_to="1" />
      <ereg regexp=".*" search_in="hdr" header="CSeq:" check_it="true" assign_to="2" />
  </action>
  </recv>
  
   <send>
    <![CDATA[

      SIP/2.0 100 Trying
      [last_Via:]
      [last_From:]
      [last_To:];tag=[call_number]
      [last_Call-ID:]
      [last_CSeq:]
      [last_Record-Route:]
      Contact: <sip:[local_ip]:[local_port];transport=[transport]>
      Content-Length: 0

    ]]>
  </send>
  
  <send>
    <![CDATA[

      SIP/2.0 180 Ringing
      [last_Via:]
      [last_From:]
      [last_To:];tag=[pid]SIPpTag01[call_number]
      [last_Call-ID:]
      [last_CSeq:]
      Contact: <sip:[local_ip]:[local_port];transport=[transport]>
      Content-Length: 0

    ]]>
  </send>
 
 
   <send>
    <![CDATA[

      SIP/2.0 183 Session Progress
      [last_Via:]
      [last_From:]
      [last_To:];tag=[pid]SIPpTag01[call_number]
      [last_Call-ID:]
      [last_CSeq:]
      Contact: <sip:[local_ip]:[local_port];transport=[transport]>
      Content-Length: 0

    ]]>
  </send>
 
 
   <send retrans="500">
    <![CDATA[

      SIP/2.0 200 OK
      [last_Via:]
      [last_From:]
      [last_To:];tag=[pid]SIPpTag01[call_number]
      [last_Call-ID:]
      [last_CSeq:]
      Contact: <sip:[local_ip]:[local_port];transport=[transport]>
      Content-Type: application/sdp
      Content-Length: [len]

      v=0
      o=user1 53655765 2353687637 IN IP[local_ip_type] [local_ip]
      s=-
      c=IN IP[media_ip_type] [media_ip]
      t=0 0
      m=audio [media_port] RTP/AVP 0
      a=rtpmap:0 PCMU/8000

    ]]>
  </send>
 
 
   <recv request="ACK" crlf="true">
   <action>
   <ereg regexp=".*" search_in="hdr" header="From:" check_it="true" assign_to="3" />
   <ereg regexp=".*" search_in="hdr" header="To:" check_it="true" assign_to="4" />
   </action>
   </recv>
   
  
  <pause milliseconds="1000"/>
  
  <send retrans="1500">
   <![CDATA[
 
       INVITE sip:123456@[remote_ip]:[remote_port] SIP/2.0
       Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
       From: [$4]
       To: [$3]
       Call-ID: [call_id]
       CSeq: 2 INVITE
       Contact: <sip:[local_ip]:[local_port];transport=[transport]>
       Max-Forwards: 70
       Content-Length: [len]
       Content-Type: application/sdp
	   
      v=0
      o=user1 53655765 2353687639 IN IP[local_ip_type] [local_ip]
      s=-
      c=IN IP[media_ip_type] [media_ip]
      t=0 0
      m=audio [media_port] RTP/AVP 0
      a=rtpmap:0 PCMU/8000

        
     ]]>
   </send>
   

   
   <recv response="200" rtd="true">
   </recv>
  
  
  <send>   
   <![CDATA[

      SIP/2.0 200 OK
      Via: [$1]
       From: [$3]
       To: [$4]
      [last_Call-ID:]
      CSeq:[$2]
      [last_Record-Route:]
	  Session-Expires: 200;refresher=uac
      Contact: <sip:12345@[local_ip]:[local_port];transport=[transport]>
      Content-Type: application/sdp
      Content-Length: [len]

v=0
o=ZTE 1052 13081 IN IP4 10.162.209.6
s=phone-call
c=IN IP4 10.162.209.22
t=0 0
m=audio 21094 RTP/AVP 0 101
a=rtpmap:101 telephone-event/8000
a=fmtp:101 0-15
a=ptime:20      

      
    ]]>
  </send>
  
  <recv request="ACK"
        rtd="true"
        crlf="true">
  </recv>
  

  <recv request="BYE">
  </recv>
  
  <send>
    <![CDATA[
      SIP/2.0 200 OK
      [last_Via:]
      [last_From:]
      [last_To:]
      [last_Call-ID:]
      [last_CSeq:]
      Contact: <sips:[local_ip]:[local_port];transport=[transport]>
      Content-Length: 0

    ]]>
  </send>


  <!-- Keep the call open for a while in case the 200 is lost to be     -->
  <!-- able to retransmit it if we receive the BYE again.               -->
 

  <!-- definition of the response time repartition table (unit is ms)   -->
  <ResponseTimeRepartition value="10, 20, 30, 40, 50, 100, 150, 200"/>

  <!-- definition of the call length repartition table (unit is ms)     -->
  <CallLengthRepartition value="10, 50, 100, 500, 1000, 5000, 10000"/>

</scenario>

